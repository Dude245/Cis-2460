source('C:/Users/Nathan/Desktop/2460/Last2460/rpmfSimple.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/rpmfGenerator.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/rpmfBinary.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/rangedBinarySearch.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/rpmfSortedBinary.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/binarySearch.R')
pmf1 <- random.pmf(10, rexp)
pmf1
pmf1
colour.values <- c("red", "orange", "yellow", "green", "blue", "indigo", "violet", "brown", "white", "black")
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1(1)
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1(1)
rpmf1(1)
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1(1)
rpmf1(1)
rpmf1(1)
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1(1)
rpmf1(1)
rpmf1(1)
c1 <- rpmf1(20)
c2 <- rpmf1(200)
c3 <- rpmf1(2000)
pmf2 <- random.pmf(10, rexp)
pmf2
rpmf2 <- rpmf.generator(pmf2, colour.values)
c4 <- rpmf2(20)
c4
c5 <- rpmf2(200)
c5
c6 <- rpmf2(2000)
c6
city.values <- c("Guelph", "Toronto", "Montreal", "Vancouver", "Ottawa", "Halifax", "Edmonton", "Calgary", "Winnipeg", "Regina")
rpmf.cities <- rpmf.generator(pmf2, city.values)
rpmf2(1)
rpmf2(1)
rpmf.cities(1)
rpmf.cities(1)
source('C:/Users/Nathan/Desktop/2460/Last2460/Example.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/Example.R')
source('C:/Users/Nathan/Desktop/2460/Last2460/Example.R')
pmf1 <- random.pmf(10, rexp)
pmf1
colour.values <- c("red", "orange", "yellow", "green", "blue", "indigo", "violet", "brown", "white", "black")
rpmf1 <- rpmf.generator(pmf1, colour.values)
rpmf1(1)
rpmf1(1)
rpmf1(1)
c1 <- rpmf1(20)
c2 <- rpmf1(200)
c3 <- rpmf1(2000)
pmf2 <- random.pmf(10, rexp)
pmf2
rpmf2 <- rpmf.generator(pmf2, colour.values)
c4 <- rpmf2(20)
c4
c5 <- rpmf2(200)
c5
c6 <- rpmf2(2000)
c6
city.values <- c("Guelph", "Toronto", "Montreal", "Vancouver", "Ottawa", "Halifax", "Edmonton", "Calgary", "Winnipeg", "Regina")
rpmf.cities <- rpmf.generator(pmf2, city.values)
rpmf2(1)
rpmf2(1)
rpmf.cities(1)
rpmf.cities(1)
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
chisq.test(BI)
BI<-binom(10000,.2,50)
hist(BI)
chisq.test(BI)
chisq.test(BI,RBI)
RBI<-rbinom(10000, 50, .2)
chisq.test(BI,RBI)
BI<-binom(10000,.2,50)
RBI<-rbinom(10000, 50, .2)
chisq.test(BI,RBI)
BI<-binom(10000,.2,50)
RBI<-rbinom(10000, 50, .2)
chisq.test(BI,RBI)
qqnorm(BI,RBI)
BI<-binom(10000,.2,50)
RBI<-rbinom(10000, 50, .2)
chisq.test(BI,RBI)
BI<-binom(10000,.2,50)
RBI<-rbinom(10000, 50, .2)
chisq.test(BI,RBI)
chisq.test(BI)
chisq.test(RBI)
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
hey<-fun(10000)
hist(hey)
qqnorm(fun(10000))
qqnorm(normwave(1000))
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
hey<-fun(10000)
hist(hey)
qqnorm(fun(10000))
qqnorm(normwave(1000))
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
rNormal-fun(10000)
hist(rNormal)
qqnorm(rNormal(10000))
qqnorm(normwave(1000))
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
rNormal<-fun(10000)
hist(rNormal)
qqnorm(rNormal(10000))
qqnorm(normwave(1000))
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
rNormal<-fun(10000)
hist(rNormal)
qqnorm(fun(10000))
qqnorm(normwave(1000))
qqplot(fun(10000))
qqplot(fun(10000),normwave(10000))
qqnorm(normwave(10000))
qqplot(fun(10000),normwave(10000))
qqnorm(normwave(10000))
qqnorm(fun(10000))
qqnorm(normwave(10000))
normwave<-function(num)
{
u = runif(num)
v = runif(num)
x=rep(0,num)
y=rep(0,num)
for (i in 1:num){
x[i] = sqrt(-2*log(u[i]))*cos(2*pi*v[i])
y[i] = sqrt(-2*log(u[i]))*sin(2*pi*v[i])
}
mList<-x+y
}
wavey<-normwave(10000)
hist(wavey)
fun<-function(num)
{
Array<-numeric()
for(t in 1:num)
{
rand1<-runif(1)
rand2<-runif(1)
x = 0.5 * (rand1+ rand2)
Array<-append(Array,x)
}
Array
}
rNormal<-fun(10000)
hist(rNormal)
qqnorm(normwave(10000))
qqnorm(fun(10000))
rNormal<-fun(100000)
rNormal<-fun(40000)
hist(rNormal)
qqnorm(fun(40000))
qqnorm(normwave(10000))
qqnorm(fun(40000))
binom<-function(num,p,choose)
{
histdat<-numeric()
for(i in 1:num){
#Sample data based on probability
histdat[i]=sum(sample(c(0,1),choose,replace=T,prob=c(1-p,p)))
}
#Return the array
histdat
}
BI<-binom(1000,.8,50)
hist(BI)
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
source('C:/Users/Nathan/Desktop/2460/Last2460/Last One.r')
